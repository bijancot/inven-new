<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Tb_detil_barang extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Tb_detil_barang_model');
    } 

    /*
     * Listing of tb_detil_barang
     */
    function index()
    {
        $data['tb_detil_barang'] = $this->Tb_detil_barang_model->get_all_tb_detil_barang();
        
        $data['_view'] = 'tb_detil_barang/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new tb_detil_barang
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('tahunPengadaan','TahunPengadaan','required|max_length[4]');
		$this->form_validation->set_rules('kondisiBarang','KondisiBarang','required|max_length[100]');
		$this->form_validation->set_rules('qtyBarang','QtyBarang','required|integer');
		$this->form_validation->set_rules('keteranganBarang','KeteranganBarang','required|max_length[100]');
		$this->form_validation->set_rules('fotoBarang','FotoBarang','required|max_length[200]');
		$this->form_validation->set_rules('idBarang','IdBarang','required|integer');
		$this->form_validation->set_rules('idJenis','IdJenis','required|integer');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'idBarang' => $this->input->post('idBarang'),
				'idJenis' => $this->input->post('idJenis'),
				'tahunPengadaan' => $this->input->post('tahunPengadaan'),
				'kondisiBarang' => $this->input->post('kondisiBarang'),
				'qtyBarang' => $this->input->post('qtyBarang'),
				'keteranganBarang' => $this->input->post('keteranganBarang'),
				'fotoBarang' => $this->input->post('fotoBarang'),
            );
            
            $tb_detil_barang_id = $this->Tb_detil_barang_model->add_tb_detil_barang($params);
            redirect('tb_detil_barang/index');
        }
        else
        {
			$this->load->model('Tb_barang_model');
			$data['all_tb_barang'] = $this->Tb_barang_model->get_all_tb_barang();

			$this->load->model('Tb_jenis_barang_model');
			$data['all_tb_jenis_barang'] = $this->Tb_jenis_barang_model->get_all_tb_jenis_barang();
            
            $data['_view'] = 'tb_detil_barang/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a tb_detil_barang
     */
    function edit($idDetilBarang)
    {   
        // check if the tb_detil_barang exists before trying to edit it
        $data['tb_detil_barang'] = $this->Tb_detil_barang_model->get_tb_detil_barang($idDetilBarang);
        
        if(isset($data['tb_detil_barang']['idDetilBarang']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('tahunPengadaan','TahunPengadaan','required|max_length[4]');
			$this->form_validation->set_rules('kondisiBarang','KondisiBarang','required|max_length[100]');
			$this->form_validation->set_rules('qtyBarang','QtyBarang','required|integer');
			$this->form_validation->set_rules('keteranganBarang','KeteranganBarang','required|max_length[100]');
			$this->form_validation->set_rules('fotoBarang','FotoBarang','required|max_length[200]');
			$this->form_validation->set_rules('idBarang','IdBarang','required|integer');
			$this->form_validation->set_rules('idJenis','IdJenis','required|integer');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'idBarang' => $this->input->post('idBarang'),
					'idJenis' => $this->input->post('idJenis'),
					'tahunPengadaan' => $this->input->post('tahunPengadaan'),
					'kondisiBarang' => $this->input->post('kondisiBarang'),
					'qtyBarang' => $this->input->post('qtyBarang'),
					'keteranganBarang' => $this->input->post('keteranganBarang'),
					'fotoBarang' => $this->input->post('fotoBarang'),
                );

                $this->Tb_detil_barang_model->update_tb_detil_barang($idDetilBarang,$params);            
                redirect('tb_detil_barang/index');
            }
            else
            {
				$this->load->model('Tb_barang_model');
				$data['all_tb_barang'] = $this->Tb_barang_model->get_all_tb_barang();

				$this->load->model('Tb_jenis_barang_model');
				$data['all_tb_jenis_barang'] = $this->Tb_jenis_barang_model->get_all_tb_jenis_barang();

                $data['_view'] = 'tb_detil_barang/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The tb_detil_barang you are trying to edit does not exist.');
    } 

    /*
     * Deleting tb_detil_barang
     */
    function remove($idDetilBarang)
    {
        $tb_detil_barang = $this->Tb_detil_barang_model->get_tb_detil_barang($idDetilBarang);

        // check if the tb_detil_barang exists before trying to delete it
        if(isset($tb_detil_barang['idDetilBarang']))
        {
            $this->Tb_detil_barang_model->delete_tb_detil_barang($idDetilBarang);
            redirect('tb_detil_barang/index');
        }
        else
            show_error('The tb_detil_barang you are trying to delete does not exist.');
    }
    
}
