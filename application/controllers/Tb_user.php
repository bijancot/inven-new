<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Tb_user extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Tb_user_model');
    } 

    /*
     * Listing of tb_user
     */
    function index()
    {
        $data['tb_user'] = $this->Tb_user_model->get_all_tb_user();
        
        $data['_view'] = 'tb_user/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new tb_user
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('password','Password','required|max_length[250]');
		$this->form_validation->set_rules('username','Username','required|max_length[30]');
		$this->form_validation->set_rules('email','Email','required|max_length[100]|valid_email');
		$this->form_validation->set_rules('namaDepan','NamaDepan','required|max_length[60]');
		$this->form_validation->set_rules('namaBelakang','NamaBelakang','required|max_length[80]');
		$this->form_validation->set_rules('noTelp','NoTelp','required|max_length[25]');
		$this->form_validation->set_rules('alamat','Alamat','required|max_length[300]');
		$this->form_validation->set_rules('tglDaftar','TglDaftar','required');
		$this->form_validation->set_rules('idRole','IdRole','required|integer');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'idRole' => $this->input->post('idRole'),
				'password' => $this->input->post('password'),
				'username' => $this->input->post('username'),
				'email' => $this->input->post('email'),
				'namaDepan' => $this->input->post('namaDepan'),
				'namaBelakang' => $this->input->post('namaBelakang'),
				'noTelp' => $this->input->post('noTelp'),
				'alamat' => $this->input->post('alamat'),
				'tglDaftar' => $this->input->post('tglDaftar'),
            );
            
            $tb_user_id = $this->Tb_user_model->add_tb_user($params);
            redirect('tb_user/index');
        }
        else
        {
			$this->load->model('Tb_role_model');
			$data['all_tb_role'] = $this->Tb_role_model->get_all_tb_role();
            
            $data['_view'] = 'tb_user/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a tb_user
     */
    function edit($idUser)
    {   
        // check if the tb_user exists before trying to edit it
        $data['tb_user'] = $this->Tb_user_model->get_tb_user($idUser);
        
        if(isset($data['tb_user']['idUser']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('password','Password','required|max_length[250]');
			$this->form_validation->set_rules('username','Username','required|max_length[30]');
			$this->form_validation->set_rules('email','Email','required|max_length[100]|valid_email');
			$this->form_validation->set_rules('namaDepan','NamaDepan','required|max_length[60]');
			$this->form_validation->set_rules('namaBelakang','NamaBelakang','required|max_length[80]');
			$this->form_validation->set_rules('noTelp','NoTelp','required|max_length[25]');
			$this->form_validation->set_rules('alamat','Alamat','required|max_length[300]');
			$this->form_validation->set_rules('tglDaftar','TglDaftar','required');
			$this->form_validation->set_rules('idRole','IdRole','required|integer');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'idRole' => $this->input->post('idRole'),
					'password' => $this->input->post('password'),
					'username' => $this->input->post('username'),
					'email' => $this->input->post('email'),
					'namaDepan' => $this->input->post('namaDepan'),
					'namaBelakang' => $this->input->post('namaBelakang'),
					'noTelp' => $this->input->post('noTelp'),
					'alamat' => $this->input->post('alamat'),
					'tglDaftar' => $this->input->post('tglDaftar'),
                );

                $this->Tb_user_model->update_tb_user($idUser,$params);            
                redirect('tb_user/index');
            }
            else
            {
				$this->load->model('Tb_role_model');
				$data['all_tb_role'] = $this->Tb_role_model->get_all_tb_role();

                $data['_view'] = 'tb_user/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The tb_user you are trying to edit does not exist.');
    } 

    /*
     * Deleting tb_user
     */
    function remove($idUser)
    {
        $tb_user = $this->Tb_user_model->get_tb_user($idUser);

        // check if the tb_user exists before trying to delete it
        if(isset($tb_user['idUser']))
        {
            $this->Tb_user_model->delete_tb_user($idUser);
            redirect('tb_user/index');
        }
        else
            show_error('The tb_user you are trying to delete does not exist.');
    }
    
}
